networks:
  IdentityService: 
    driver: bridge
  ProfileService: 
    driver: bridge
  VacanciesProfile:
    driver: bridge
  AnalyticsService:
    driver: bridge
  
  
services:
  api-gateway:
    image: api-gateway
    container_name: api-gateway
    build:
      context: .
      dockerfile: ./ApiGateway/Dockerfile
    working_dir: "/app"
    ports:
      - "5000:80"
    networks:
      - IdentityService
      - ProfileService
      - VacanciesProfile
      - AnalyticsService
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - IdentityService
      - ProfileService
      - VacanciesProfile
      - AnalyticsService
  
  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./rabbitmq-data:/var/lib/rabbitmq
      - ./rabbitmq-logs:/var/log/rabbitmq
    networks:
        - IdentityService
        - ProfileService
  
  identity-postgres:
    image: postgres:15.0
    container_name: identity-postgres
    ports:
      - "5431:5432"
    # restart: always
    environment:
      POSTGRES_USER: postgres_identity
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: IdentityDb
    volumes:
      - ./identityDbDir:/var/lib/postgresql/data
    networks:
      - IdentityService
        
  identity-service:
    image: identity-service
    container_name: identity-service
    build:
      context: .
      dockerfile: ./IdentityService/Dockerfile
    working_dir: "/app"
    # restart: always
    ports:
      - "5242:80"
    depends_on:
      - identity-postgres
    networks:
      - IdentityService
    
  profile-postgres:
    image: postgres:15.0
    container_name: profile-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres_profile
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ProfileDb
    # restart: always
    volumes:
        - ./profileDbDir:/var/lib/postgresql/data
    networks:
        - ProfileService
  
  profile-service:
    image: profile-service
    container_name: profile-service
    build:
      context: .
      dockerfile: ./ProfilesService/Dockerfile
    working_dir: "/app"
    # restart: always
    ports:
      - "5243:80"
    depends_on:
      - profile-postgres
    networks:
      - ProfileService
    
  vacancies-postgres:
    image: postgres:15.0
    container_name: vacancies-postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres_vacancies
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: VacanciesDb
    # restart: always
    volumes:
        - ./vacanciesDbDir:/var/lib/postgresql/data
    networks:
        - VacanciesProfile
    
  vacancies-service:
    image: vacancies-service
    container_name: vacancies-service
    build:
      context: .
      dockerfile: ./VacanciesService/Dockerfile
    # restart: always
    working_dir: "/app"
    ports:
      - "5244:80"
    depends_on:
      - vacancies-postgres
    networks:
      - VacanciesProfile
  
  analytics-postgres:
    image: postgres:15.0
    container_name: analytics-postgres
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres_analytics
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: AnalyticsDb
    # restart: always
    volumes:
        - ./analyticsDbDir:/var/lib/postgresql/data
    networks:
        - AnalyticsService
  
  analytics-service:
    image: analytics-service
    container_name: analytics-service
    build:
      context: .
      dockerfile: ./AnalyticsService/Dockerfile
    # restart: always
    working_dir: "/app"
    ports:
      - "5245:80"
    depends_on:
      - analytics-postgres
    networks:
      - AnalyticsService