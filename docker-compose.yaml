services:
  api-gateway:
    image: api-gateway
    container_name: api-gateway
    build:
      context: .
      dockerfile: ./ApiGateway/Dockerfile
    working_dir: "/app"
    ports:
      - "5000:80"

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  
  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./Volumes/rabbitmq-data:/var/lib/rabbitmq
      - ./Volumes/rabbitmq-logs:/var/log/rabbitmq
        
  identity-postgres:
    image: postgres
    container_name: identity-postgres
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: postgres_identity
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: IdentityDb
    volumes:
      - ./Volumes/identityDbDir:/var/lib/postgresql/data

  identity-service:
    image: identity-service
    container_name: identity-service
    build:
      context: .
      dockerfile: ./IdentityService/Dockerfile
    working_dir: "/app"
    ports:
      - "5242:80"
    depends_on:
       - identity-postgres

  profile-postgres:
    image: postgres
    container_name: profile-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres_profile
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ProfileDb
    volumes:
        - ./Volumes/profileDbDir:/var/lib/postgresql/data
        
  profile-service:
    image: profile-service
    container_name: profile-service
    build:
      context: .
      dockerfile: ./ProfilesService/Dockerfile
    working_dir: "/app"
    ports:
      - "5243:80"
    depends_on:
      - profile-postgres
    
  vacancies-postgres:
    image: postgres
    container_name: vacancies-postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres_vacancies
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: VacanciesDb
    # restart: always
    volumes:
        - ./Volumes/vacanciesDbDir:/var/lib/postgresql/data
    
  vacancies-service:
    image: vacancies-service
    container_name: vacancies-service
    build:
      context: .
      dockerfile: ./VacanciesService/Dockerfile

    working_dir: "/app"
    ports:
      - "5244:80"
    depends_on:
      - vacancies-postgres
  
  chat-postgres:
    image: postgres
    container_name: chat-postgres
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres_chat
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ChatDb
    # restart: always
    volumes:
        - ./Volumes/chatDbDir:/var/lib/postgresql/data

  chat-service:
    image: chat-service
    container_name: chat-service
    build:
      context: .
      dockerfile: ./ChatService/Dockerfile
    working_dir: "/app"
    ports:
      - "5245:80"
    depends_on:
      - chat-postgres
      